{"version":3,"sources":["components/Home/components/Main.tsx","components/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Main","defaultLight","window","matchMedia","matches","useLocalStorage","theme","setTheme","className","data-theme","onClick","size","icon","faMoon","faSun","href","target","rel","Home","App","Paths","map","path","extension","exact","component","location","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ulBAuFeA,EAhFF,WAET,IAAMC,EAAeC,OAAOC,WAAW,iCAAiCC,QACxE,EAA0BC,IAAgB,QAASJ,EAAe,OAAS,SAAQ,mBAA5EK,EAAK,KAAEC,EAAQ,KAOtB,OACI,qBAAKC,UAAU,OAAOC,aAAYH,EAAM,SAGpC,sBAAKE,UAAU,cAAa,UAExB,qBAAKA,UAAU,SAAQ,SACnB,wBAAQA,UAAU,WAAWE,QAZzB,WAEhBH,EAD2B,UAAVD,EAAoB,OAAS,UAWgB,SACnC,UAAVA,EAAoB,cAAC,IAAe,CAACK,KAAM,KAAMC,KAAMC,IAAQL,UAAU,SAAW,cAAC,IAAe,CAACG,KAAM,KAAMC,KAAME,IAAON,UAAU,aAIjJ,sBAAKA,UAAU,UAAS,UACpB,qBAAKA,UAAU,gBAAe,SAC1B,wCAEJ,sBAAKA,UAAU,eAAc,UACzB,4BACK,uBAEL,4BACK,wHAEL,8BACK,+BACD,mBAAGA,UAAU,sCAAsCO,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAAY,SAAE,kBACzH,KACD,mBAAGT,UAAU,gCAAgCO,KAAK,2BAA2BC,OAAO,SAASC,IAAI,aAAY,SAAE,YAC9G,KACD,mBAAGT,UAAU,6BAA6BO,KAAK,uBAAuBC,OAAO,SAASC,IAAI,aAAY,SAAE,YACvG,KACD,mBAAGT,UAAU,6BAA6BO,KAAK,mBAAmBC,OAAO,SAASC,IAAI,aAAY,SAAE,SACnG,SACD,mBAAGT,UAAU,8BAA8BO,KAAK,qBAAqBC,OAAO,SAASC,IAAI,aAAY,SAAE,UACtG,OAGL,8BACK,sCACD,mBAAGT,UAAU,gCAAgCO,KAAK,2BAA2BC,OAAO,SAASC,IAAI,aAAY,SAAE,YAC9G,2HAGL,8BACK,oCACD,mBAAGT,UAAU,4BAA4BO,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAAY,SAAE,WAClH,6BAIb,sBAAKT,UAAU,UAAS,UACpB,qBAAKA,UAAU,gBAAe,SAC1B,wCAEJ,qBAAKA,UAAU,eAAc,SACzB,4BACI,sBAAKA,UAAU,gBAAe,UAC1B,mBAAGA,UAAU,OAAOO,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAY,sBAAa,MAClH,mBAAGT,UAAU,OAAOO,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAAY,oBAAW,MACvG,mBAAGT,UAAU,OAAOO,KAAK,kCAAkCC,OAAO,SAASC,IAAI,aAAY,mCC9D5GC,G,MAVF,WAEX,OACE,qBAAKV,UAAU,OAAM,SACnB,cAAC,EAAI,Q,uBCuBIW,EAvBH,WACV,OACE,cAAC,IAAM,UACL,eAAC,IAAM,WACJC,EAAMC,KAAI,SAACC,GACV,OACE,cAAC,IAAK,CAEJA,KAAMA,EAAKC,UACXC,OAAK,EACLC,UAAW,WAET,OADAvB,OAAOwB,SAASX,KAAOO,EAAKK,IACrB,OALJL,EAAKC,cAUhB,cAAC,IAAK,CAACD,KAAK,IAAIG,UAAWP,UCXpBU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ddadb68d.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport useLocalStorage from \"use-local-storage\";\r\nimport \"./Main.scss\";\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const defaultLight = window.matchMedia('(prefers-color-scheme: light)').matches;\r\n    const [theme, setTheme] = useLocalStorage('theme', defaultLight ? 'dark' : 'light');\r\n\r\n    const switchTheme = () => {\r\n        const newTheme = theme === 'light' ? 'dark' : 'light';\r\n        setTheme(newTheme);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\" data-theme={theme}>\r\n\r\n            \r\n            <div className=\"mid-section\">\r\n\r\n                <div className=\"header\">\r\n                    <button className=\"switcher\" onClick={switchTheme}>\r\n                        {theme === 'light' ? <FontAwesomeIcon size={'2x'} icon={faMoon} className=\"icon\"/> : <FontAwesomeIcon size={'2x'} icon={faSun} className=\"icon\"/>}\r\n                    </button>\r\n                    {/* <button className=\"home-button\">Home</button> */}\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"section-title\">\r\n                        <p>Intro</p>\r\n                    </div>\r\n                    <div className=\"section-text\">\r\n                        <p>\r\n                            {\"Hi! :) I'm Jasper.\"}\r\n                        </p>\r\n                        <p>\r\n                            {\"I'm currently researching and exploring new modeling techniques to improve ML performance and efficiency at Google.\"}\r\n                        </p>   \r\n                        <p>\r\n                            {\" Previously, I've worked at \"}\r\n                            <a className=\"styled-link akuna capital hoverable\" href=\"https://www.akunacapital.com/\" target=\"_blank\" rel=\"noreferrer\">{\"Akuna Capital\"}</a>\r\n                            {\", \"}\r\n                            <a className=\"styled-link citadel hoverable\" href=\"https://www.citadel.com/\" target=\"_blank\" rel=\"noreferrer\">{\"Citadel\"}</a>\r\n                            {\", \"}\r\n                            <a className=\"styled-link meta hoverable\" href=\"https://ai.meta.com/\" target=\"_blank\" rel=\"noreferrer\">{\"Meta AI\"}</a>\r\n                            {\", \"}\r\n                            <a className=\"styled-link nuro hoverable\" href=\"https://nuro.ai/\" target=\"_blank\" rel=\"noreferrer\">{\"Nuro\"}</a>\r\n                            {\", and \"}\r\n                            <a className=\"styled-link tesla hoverable\" href=\"https://tesla.com/\" target=\"_blank\" rel=\"noreferrer\">{\"Tesla\"}</a>\r\n                            {\".\"}\r\n\r\n                        </p>\r\n                        <p>\r\n                            {\"I graduated from the University of \"}\r\n                            <a className=\"styled-link toronto hoverable\" href=\"https://www.utoronto.ca/\" target=\"_blank\" rel=\"noreferrer\">{\"Toronto\"}</a>\r\n                            {\" specializing in Computer Science with a focus in Artificial Intelligence and minoring in Mathematics and Statistics.\"}\r\n                        \r\n                        </p>\r\n                        <p>\r\n                            {\"Happy to talk about food, music, \"}\r\n                            <a className=\"styled-link cat hoverable\" href=\"https://jasperjschen.com/cat.jpg\" target=\"_blank\" rel=\"noreferrer\">{\"my cat\"}</a>\r\n                            {\", and technology.\"}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section\">\r\n                    <div className=\"section-title\">\r\n                        <p>Links</p>\r\n                    </div>\r\n                    <div className=\"section-text\">\r\n                        <p>\r\n                            <div className=\"links-section\">\r\n                                <a className=\"link\" href=\"https://www.linkedin.com/in/jasperjschen/\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>{`   `}\r\n                                <a className=\"link\" href=\"https://github.com/jasperjschen/\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>{`   `}\r\n                                <a className=\"link\" href=\"mailto:jasperjschen@outlook.com\" target=\"_blank\" rel=\"noreferrer\">Email</a>\r\n                            </div>\r\n\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./components/Main\";\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Main/>\r\n      {/* <Player/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nimport Paths from \"./paths.json\";\r\n\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {Paths.map((path) => {\r\n          return (\r\n            <Route\r\n              key={path.extension}\r\n              path={path.extension}\r\n              exact\r\n              component={() => {\r\n                window.location.href = path.url;\r\n                return null;\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}